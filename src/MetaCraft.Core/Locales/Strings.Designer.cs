//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetaCraft.Core.Locales {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static System.Resources.ResourceManager resourceMan;
        
        private static System.Globalization.CultureInfo resourceCulture;
        
        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Resources.ResourceManager ResourceManager {
            get {
                if (object.Equals(null, resourceMan)) {
                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("MetaCraft.Core.Locales.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static string PlatformParseInvalidSystem {
            get {
                return ResourceManager.GetString("PlatformParseInvalidSystem", resourceCulture);
            }
        }
        
        internal static string PlatformParseInvalidArchitecture {
            get {
                return ResourceManager.GetString("PlatformParseInvalidArchitecture", resourceCulture);
            }
        }
        
        internal static string PlatformParseInvalidFormat {
            get {
                return ResourceManager.GetString("PlatformParseInvalidFormat", resourceCulture);
            }
        }
        
        internal static string PlaftormParseError {
            get {
                return ResourceManager.GetString("PlaftormParseError", resourceCulture);
            }
        }
        
        internal static string PackageArchiveMissingManifest {
            get {
                return ResourceManager.GetString("PackageArchiveMissingManifest", resourceCulture);
            }
        }
        
        internal static string ContainerInsertAlreadyExists {
            get {
                return ResourceManager.GetString("ContainerInsertAlreadyExists", resourceCulture);
            }
        }
        
        internal static string PackageUnitary {
            get {
                return ResourceManager.GetString("PackageUnitary", resourceCulture);
            }
        }
        
        internal static string PackageArchiveManifestNotFile {
            get {
                return ResourceManager.GetString("PackageArchiveManifestNotFile", resourceCulture);
            }
        }
        
        internal static string PackageArchiveInvalidManifest {
            get {
                return ResourceManager.GetString("PackageArchiveInvalidManifest", resourceCulture);
            }
        }
        
        internal static string PackageInstallExpand {
            get {
                return ResourceManager.GetString("PackageInstallExpand", resourceCulture);
            }
        }
        
        internal static string PackageInstallConfigure {
            get {
                return ResourceManager.GetString("PackageInstallConfigure", resourceCulture);
            }
        }
        
        internal static string ContainerTowDeleteFailed {
            get {
                return ResourceManager.GetString("ContainerTowDeleteFailed", resourceCulture);
            }
        }
        
        internal static string ScopeLockIOError {
            get {
                return ResourceManager.GetString("ScopeLockIOError", resourceCulture);
            }
        }
        
        internal static string ScopeLockUnauthorizedAccess {
            get {
                return ResourceManager.GetString("ScopeLockUnauthorizedAccess", resourceCulture);
            }
        }
        
        internal static string PlatformShellExecuteFailed {
            get {
                return ResourceManager.GetString("PlatformShellExecuteFailed", resourceCulture);
            }
        }
        
        internal static string PackageConfigureScriptFailed {
            get {
                return ResourceManager.GetString("PackageConfigureScriptFailed", resourceCulture);
            }
        }
        
        internal static string ContainerUnitaryNoVersion {
            get {
                return ResourceManager.GetString("ContainerUnitaryNoVersion", resourceCulture);
            }
        }
        
        internal static string PackageRemoveDeleting {
            get {
                return ResourceManager.GetString("PackageRemoveDeleting", resourceCulture);
            }
        }
        
        internal static string PackageRemoveNonExistent {
            get {
                return ResourceManager.GetString("PackageRemoveNonExistent", resourceCulture);
            }
        }
        
        internal static string PackageRemoveScriptFailNoError {
            get {
                return ResourceManager.GetString("PackageRemoveScriptFailNoError", resourceCulture);
            }
        }
        
        internal static string PackageRemoveScriptError {
            get {
                return ResourceManager.GetString("PackageRemoveScriptError", resourceCulture);
            }
        }
        
        internal static string PackageRemoveConfigure {
            get {
                return ResourceManager.GetString("PackageRemoveConfigure", resourceCulture);
            }
        }
    }
}
